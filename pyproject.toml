# -----------------------------------------------------------------------------
# Build:
# -----------------------------------------------------------------------------

[build-system]
requires = ["setuptools>=80.0", "wheel>=0.42", "setuptools-scm>=8.3.1"]
build-backend = "setuptools.build_meta"

# -----------------------------------------------------------------------------
# Project:
# -----------------------------------------------------------------------------

[project]
name = "enterpriseattack"
version = "1.0.0"
requires-python = ">=3.9"
description = """A lightweight Python module to interact with the MITRE ATT&CKÂ® 
Enterprise dataset. Built for speed with minimal dependencies."""
authors = [
    {name = "xakepnz", email = "xakepnz@pm.me"}
]
readme = "README.md"
license = {file = "LICENSE"}
keywords = [
    "mitre att&ck",
    "att&ck enterprise",
    "enterpriseattack",
    "mitre python",
    "mitre att&ck python",
    "mitre framework",
    "att&ck"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Typing :: Typed",
]
dependencies = [
    "ujson >= 3.0.0",
    "requests >= 2.9.2"
]

[project.optional-dependencies]
build = [
    "setuptools ~= 80.0",
    "wheel == 0.45.1",
    "build == 1.2.2.post1",
    "setuptools-scm ~= 8.3.1"
]
release = [
    "twine == 6.1.0",
    "python-semantic-release == 10.2.0"
]
test = [
    "pytest >= 6.1.0",
    "pytest-cov >= 2.10.1",
    "flake8 >= 3.7.9",
    "tox >= 3.14.2",
    "coverage == 4.5.4",
    "pipdeptree == 2.26.1",
    "pre-commit ~= 4.2.0",
    "bandit == 1.8.3",
    "tox ~= 4.25.0"
]

[project.urls]
Homepage = "https://gitlab.com/xakepnz/enterpriseattack"
Documentation = "https://gitlab.com/xakepnz/enterpriseattack/-/tree/main/docs"
Issues = "https://gitlab.com/xakepnz/enterpriseattack/-/issues"
Changelog = "https://gitlab.com/xakepnz/enterpriseattack/-/tree/main/CHANGELOG.md"
Download = "https://gitlab.com/xakepnz/enterpriseattack/-/releases"

# -----------------------------------------------------------------------------
# Semantic Release:
# -----------------------------------------------------------------------------

[tool.semantic_release]
build_command = """
    python3 -m pip install -e .[build]
    python3 -m build .
"""
version_variables = ["enterpriseattack/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
commit_parser = "conventional"
changelog_file = "CHANGELOG.md"
commit_message = "chore(release): bump version to {version}"
log_level = "info"
logging_use_named_masks = true
upload_to_vcs_release = true
patch_without_tag = false
upload_to_pypi = false
major_on_zero = false
allow_zero_version = false

[tool.semantic_release.changelog]
exclude_commit_patterns = [
  '''chore(?:\([^)]*?\))?: .+''',
  '''ci(?:\([^)]*?\))?: .+''',
  '''refactor(?:\([^)]*?\))?: .+''',
  '''style(?:\([^)]*?\))?: .+''',
  '''test(?:\([^)]*?\))?: .+''',
  '''build\((?!deps\): .+)''',
  '''Merged? .*''',
  '''lint(?:\([^)]*?\))?: .+''',
  '''Initial Commit.*'''
]

[tool.semantic_release.commit_parser_options]
allowed_types = [
    "build", "chore", "ci", "docs", "feat", "fix",
    "perf", "refactor", "test", "style"
]
minor_types = ["feat"]
patch_types = ["fix", "perf", "docs"]

[tool.semantic_release.branches.main]
match = "main"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.remote]
type = "gitlab"
token = { env = "GITLAB_TOKEN" }
